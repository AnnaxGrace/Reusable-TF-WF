name: Reusable Plan and Apply

on: 
    workflow_call:
        secrets:
            TF_vars:
                required: false
            AZURE_CLIENT_ID:
                required: true
            AZURE_TENANT_ID:
                required: true
            AZURE_SUBSCRIPTION_ID:
                required: true


permissions:
    id-token: write
    contents: read

jobs:
  run-tf:
    runs-on: ubuntu-latest

    steps: 

    - uses: actions/checkout@v4

    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: 'Create Terraform Secrets tfvars File'
      run: |
        touch secrets.tfvars
        cat > secrets.tfvars << EOF
        ${{ secrets.TF_vars }}
        EOF
      working-directory: terraform

    - name: 'Test secrets.tfvars'
      run: |
        echo $(cat terraform/secrets.tfvars)
        array=${{ secrets.TF_vars }}
        echo "straight"
        echo $(${{ secrets.TF_vars }})
        echo "array"
        echo $array
        for i in "${array[@]}"; do
            echo $i
            echo "here"
        done
        # for i in ${{ secrets.TF_vars }}; do
        #   echo $i
        #   echo "here"
        #   i=$(echo $i | sed 's/=.*//g')=$(echo ${i#*=} | base64 -di | base64 -di)
        #   echo ::add-mask::${i#*=}
        #   printf '%s\n' "$i" >> $GITHUB_ENV
        # done
        # for i in "${secrets.TF_vars{@}";
        # do
        #     echo "here"
        #     echo $i
        # done

    - uses: actions/upload-artifact@v4
      with:
        name: secrets
        path: terraform/secrets.tfvars

    - name: 'Plan Run'
      run: |
        terraform init
        terraform plan -input=false -var-file=./secrets.tfvars
        # terraform plan -input=false 
      working-directory: terraform

    # - name: 'Apply Run'
    #   run: |
    #     terraform apply -auto-approve -input=false -var-file=./secrets.tfvars
    #   working-directory: terraform
